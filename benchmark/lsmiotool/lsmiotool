#!/usr/bin/python3

import os, sys, getopt, site

# calculate 
srv_path = os.path.join(os.path.dirname(os.path.abspath(__file__)), '..')
sys.path.append(srv_path)

from lsmiotool.lib import log, env

LSMIOTOOL_HELP = """How to run
-----------------------------------------------------------------------
./lsmiotool [options]

--debug     enable debug mode and run
--help      print this help screen
--test      run unit and functional tests
--version   print version and exit
"""

if __name__ == '__main__':
	debug = False
	shell = False
	test = False
	log.Log.setLevel(log.LOG_LEVEL.DEBUG) # Tentative default log level
	try:
		opts, args = getopt.getopt(sys.argv[1:], 'duhstvw',
						["debug", "help", "shell", "test", "version"])
		for opt, arg in opts:
			if opt in "--help":
				log.Console.dump(LSMIOTOOL_HELP)
				sys.exit()
			elif opt in "--version":
				log.Console.info("version: " + config.VERSION)
				sys.exit()
			elif opt in "--debug":
				debug = True
				log.Log.setLevel(log.LOG_LEVEL.DEBUG)
			elif opt in "--shell":
				shell = True
			elif opt in "--test":
				test = True
				log.Log.setLevel(log.LOG_LEVEL.DEBUG)
			else:
				log.Console.error("unknown option: " + opt)
				sys.exit()
	except getopt.GetoptError as err:
		log.Console.error(err)
		sys.exit()

	args = []
	kwargs = {}
	if shell:
		class_main = main.ShellMain
	elif test:
		class_main = main.TestMain
	else:
		class_main = main.HTTPDMain

	inst_main = class_main(*args, **kwargs)
	inst_main.run()


