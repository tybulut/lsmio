name: CMake Depend All - Ubuntu

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Build on Ubuntu
    runs-on: ubuntu-24.04

    strategy:
      fail-fast: false

      # To add more build types (Release, Debug, RelWithDebInfo, etc.) customize the build_type list.
      matrix:
        os: [ubuntu-latest]
        build_type: [Release]
        c_compiler: [gcc]
        include:
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++

    env:
      MAKEFLAGS: "-j"

    steps:
    - name: Checkout project
      uses: actions/checkout@v3

    - name: Install dependencies - DPKG
      run: >
        sudo apt-get install -y \
          openmpi-bin libopenmpi-dev \
          libgoogle-glog-dev libgtest-dev libgflags-dev \
          libcli11-dev libfmt-dev \
          libleveldb-dev librocksdb-dev \
          libadios2-mpi-c++11-dev

    - name: Set reusable strings - Ubuntu
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"
        echo "parallel-build="$(nproc) >> "$GITHUB_OUTPUT"
        echo "MAKEFLAGS=-j$(nproc)" >> $GITHUB_ENV

    - name: Configure CMake - Ubuntu
      run: >
        cmake -B ${{ steps.strings.outputs.build-output-dir }} \
          -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }} \
          -DCMAKE_C_COMPILER=${{ matrix.c_compiler }} \
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}

    - name: Build - Ubuntu
      run: >
        cmake --build ${{ steps.strings.outputs.build-output-dir }} \
          --config ${{ matrix.build_type }} \
          --parallel ${{ steps.strings.outputs.parallel-build }}

    - name: Test - Ubuntu
      working-directory: ${{ steps.strings.outputs.build-output-dir }}
      run: |
        ctest --build-config ${{ matrix.build_type }}
